/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: mt5api.i

#ifndef SWIG_mt5api_WRAP_H_
#define SWIG_mt5api_WRAP_H_

class Swig_memory;

class SwigDirector_IMTManagerAPI : public IMTManagerAPI
{
 public:
  SwigDirector_IMTManagerAPI(int swig_p);
  virtual void Release();
  virtual MTAPIRES LicenseCheck(MTLicenseCheck &check);
  virtual void *Allocate(UINT const bytes);
  virtual void Free(void *ptr);
  virtual void ProxySet(MTProxyInfo const &proxy);
  virtual MTAPIRES Connect(LPCWSTR server,UINT64 login,LPCWSTR password,LPCWSTR password_cert,UINT64 pump_mode,UINT timeout);
  virtual MTAPIRES Connect(LPCWSTR server,UINT64 login,LPCWSTR password,LPCWSTR password_cert,UINT64 pump_mode);
  virtual void Disconnect();
  virtual MTAPIRES Subscribe(IMTManagerSink *sink);
  virtual MTAPIRES Unsubscribe(IMTManagerSink *sink);
  virtual MTAPIRES LoggerOut(UINT const code,LPCWSTR format,...arg2);
  virtual void LoggerFlush();
  virtual MTAPIRES LoggerServerRequest(UINT const mode,UINT const type,INT64 const from,INT64 const to,LPCWSTR filter,MTLogRecord *&records,UINT &records_total);
  virtual MTAPIRES LoggerOutString(UINT const code,LPCWSTR string);
  virtual MTAPIRES LoggerReserved2();
  virtual MTAPIRES LoggerReserved3();
  virtual MTAPIRES LoggerReserved4();
  virtual IMTConTime *TimeCreate();
  virtual MTAPIRES TimeSubscribe(IMTConTimeSink *sink);
  virtual MTAPIRES TimeUnsubscribe(IMTConTimeSink *sink);
  virtual MTAPIRES TimeGet(IMTConTime *config);
  virtual INT64 TimeServer();
  virtual MTAPIRES TimeServerRequest(INT64 &time_msc);
  virtual MTAPIRES TimeReserved2();
  virtual MTAPIRES TimeReserved3();
  virtual MTAPIRES TimeReserved4();
  virtual IMTConHoliday *HolidayCreate();
  virtual MTAPIRES HolidaySubscribe(IMTConHolidaySink *sink);
  virtual MTAPIRES HolidayUnsubscribe(IMTConHolidaySink *sink);
  virtual UINT HolidayTotal();
  virtual MTAPIRES HolidayNext(UINT const pos,IMTConHoliday *config);
  virtual IMTConManagerReport *ManagerReportCreate();
  virtual IMTConManager *ManagerCreate();
  virtual IMTConManagerAccess *ManagerAccessCreate();
  virtual MTAPIRES ManagerCurrent(IMTConManager *manager);
  virtual IMTConGroup *GroupCreate();
  virtual IMTConGroupSymbol *GroupSymbolCreate();
  virtual IMTConCommission *GroupCommissionCreate();
  virtual IMTConCommTier *GroupTierCreate();
  virtual MTAPIRES GroupSubscribe(IMTConGroupSink *sink);
  virtual MTAPIRES GroupUnsubscribe(IMTConGroupSink *sink);
  virtual UINT GroupTotal();
  virtual MTAPIRES GroupNext(UINT const pos,IMTConGroup *group);
  virtual MTAPIRES GroupGet(LPCWSTR name,IMTConGroup *group);
  virtual MTAPIRES GroupRequest(LPCWSTR name,IMTConGroup *group);
  virtual MTAPIRES GroupUpdate(IMTConGroup *group);
  virtual MTAPIRES GroupUpdateBatch(IMTConGroup **configs,UINT const config_total,MTAPIRES *results);
  virtual IMTConGroupArray *GroupCreateArray();
  virtual MTAPIRES GroupRequestArray(LPCWSTR mask,IMTConGroupArray *groups);
  virtual IMTConSymbol *SymbolCreate();
  virtual IMTConSymbolSession *SymbolSessionCreate();
  virtual MTAPIRES SymbolSubscribe(IMTConSymbolSink *sink);
  virtual MTAPIRES SymbolUnsubscribe(IMTConSymbolSink *sink);
  virtual UINT SymbolTotal();
  virtual MTAPIRES SymbolNext(UINT const pos,IMTConSymbol *symbol);
  virtual MTAPIRES SymbolGet(LPCWSTR name,IMTConSymbol *symbol);
  virtual MTAPIRES SymbolGet(LPCWSTR name,LPCWSTR group,IMTConSymbol *symbol);
  virtual MTAPIRES SymbolRequest(LPCWSTR name,IMTConSymbol *symbol);
  virtual MTAPIRES SymbolRequest(LPCWSTR name,LPCWSTR group,IMTConSymbol *symbol);
  virtual MTAPIRES SymbolExist(IMTConSymbol const *symbol,IMTConGroup const *group);
  virtual MTAPIRES SymbolUpdate(IMTConSymbol *symbol);
  virtual MTAPIRES SymbolUpdateBatch(IMTConSymbol **configs,UINT const configs_total,MTAPIRES *results);
  virtual IMTConSymbolArray *SymbolCreateArray();
  virtual MTAPIRES SymbolRequestArray(LPCWSTR mask,LPCWSTR group,IMTConSymbolArray *symbols);
  virtual MTAPIRES SelectedAdd(LPCWSTR symbol);
  virtual MTAPIRES SelectedAddAll();
  virtual MTAPIRES SelectedDelete(LPCWSTR symbol);
  virtual MTAPIRES SelectedDelete(UINT const pos);
  virtual MTAPIRES SelectedDeleteAll();
  virtual MTAPIRES SelectedShift(UINT const pos,int const shift);
  virtual UINT SelectedTotal();
  virtual MTAPIRES SelectedNext(UINT const pos,MTAPISTR &symbol);
  virtual MTAPIRES SelectedAddBatch(LPWSTR *symbols,UINT symbols_total);
  virtual MTAPIRES SelectedDeleteBatch(LPWSTR *symbols,UINT symbols_total);
  virtual MTAPIRES SelectedReserved1();
  virtual MTAPIRES SelectedReserved2();
  virtual IMTUser *UserCreate();
  virtual IMTAccount *UserCreateAccount();
  virtual MTAPIRES UserSubscribe(IMTUserSink *sink);
  virtual MTAPIRES UserUnsubscribe(IMTUserSink *sink);
  virtual MTAPIRES UserAdd(IMTUser *user,LPCWSTR master_pass,LPCWSTR investor_pass);
  virtual MTAPIRES UserDelete(UINT64 const login);
  virtual MTAPIRES UserUpdate(IMTUser *user);
  virtual UINT UserTotal();
  virtual MTAPIRES UserGet(UINT64 const login,IMTUser *user);
  virtual MTAPIRES UserRequest(UINT64 const login,IMTUser *user);
  virtual MTAPIRES UserGroup(UINT64 const login,MTAPISTR &group);
  virtual MTAPIRES UserLogins(LPCWSTR group,UINT64 *&logins,UINT &logins_total);
  virtual MTAPIRES UserPasswordCheck(UINT const type,UINT64 const login,LPCWSTR password);
  virtual MTAPIRES UserPasswordChange(UINT const type,UINT64 const login,LPCWSTR password);
  virtual MTAPIRES UserCertDelete(UINT64 const login);
  virtual MTAPIRES UserCertConfirm(UINT64 const login);
  virtual MTAPIRES UserExternalSync(UINT64 const login,UINT64 const gateway_id,LPCWSTR account_id,UINT sync_mode);
  virtual MTAPIRES UserAccountGet(UINT64 const login,IMTAccount *account);
  virtual MTAPIRES UserAccountRequest(UINT64 const login,IMTAccount *account);
  virtual IMTCertificate *UserCertCreate();
  virtual MTAPIRES UserCertUpdate(UINT64 const login,IMTCertificate const *certificate);
  virtual MTAPIRES UserCertGet(UINT64 const login,IMTCertificate *certificate);
  virtual MTAPIRES UserBalanceCheck(UINT64 const login,UINT const fixflag,double &balance_user,double &balance_history,double &credit_user,double &credit_history);
  virtual IMTDeal *DealCreate();
  virtual IMTDealArray *DealCreateArray();
  virtual MTAPIRES DealRequest(UINT64 const ticket,IMTDeal *deal);
  virtual MTAPIRES DealRequest(UINT64 const login,INT64 const from,INT64 const to,IMTDealArray *deals);
  virtual MTAPIRES DealSubscribe(IMTDealSink *sink);
  virtual MTAPIRES DealUnsubscribe(IMTDealSink *sink);
  virtual MTAPIRES DealDelete(UINT64 const ticket);
  virtual MTAPIRES DealUpdate(IMTDeal *deal);
  virtual IMTPosition *PositionCreate();
  virtual IMTPositionArray *PositionCreateArray();
  virtual MTAPIRES PositionSubscribe(IMTPositionSink *sink);
  virtual MTAPIRES PositionUnsubscribe(IMTPositionSink *sink);
  virtual MTAPIRES PositionGet(UINT64 const login,LPCWSTR symbol,IMTPosition *position);
  virtual MTAPIRES PositionGet(UINT64 const login,IMTPositionArray *positions);
  virtual MTAPIRES PositionRequest(UINT64 const login,IMTPositionArray *positions);
  virtual MTAPIRES PositionGetByTicket(UINT64 const ticket,IMTPosition *position);
  virtual MTAPIRES PositionDelete(IMTPosition *position);
  virtual MTAPIRES PositionUpdate(IMTPosition *position);
  virtual MTAPIRES PositionGetByGroup(LPCWSTR mask,IMTPositionArray *positions);
  virtual IMTOrder *OrderCreate();
  virtual IMTOrderArray *OrderCreateArray();
  virtual MTAPIRES OrderSubscribe(IMTOrderSink *sink);
  virtual MTAPIRES OrderUnsubscribe(IMTOrderSink *sink);
  virtual MTAPIRES OrderGet(UINT64 const ticket,IMTOrder *order);
  virtual MTAPIRES OrderGetOpen(UINT64 const login,IMTOrderArray *orders);
  virtual MTAPIRES OrderRequest(UINT64 const ticket,IMTOrder *order);
  virtual MTAPIRES OrderRequestOpen(UINT64 const login,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequest(UINT64 const login,INT64 const from,INT64 const to,IMTOrderArray *orders);
  virtual MTAPIRES OrderDelete(UINT64 const ticket);
  virtual MTAPIRES OrderUpdate(IMTOrder *order);
  virtual MTAPIRES OrderGetByGroup(LPCWSTR mask,IMTOrderArray *orders);
  virtual MTAPIRES OrderGetByLogins(UINT64 const *logins,UINT const logins_total,IMTOrderArray *orders);
  virtual MTAPIRES TickSubscribe(IMTTickSink *sink);
  virtual MTAPIRES TickUnsubscribe(IMTTickSink *sink);
  virtual MTAPIRES TickAdd(LPCWSTR symbol,MTTick &tick);
  virtual MTAPIRES TickAddStat(MTTick &tick,MTTickStat &stat);
  virtual MTAPIRES TickLast(LPCWSTR symbol,MTTickShort &tick);
  virtual MTAPIRES TickLast(UINT &id,MTTick *&ticks,UINT &ticks_total);
  virtual MTAPIRES TickStat(LPCWSTR symbol,MTTickStat &stat);
  virtual MTAPIRES TickHistoryRequest(LPCWSTR symbol,INT64 const from,INT64 const to,MTTickShort *&ticks,UINT &ticks_total);
  virtual MTAPIRES TickLast(LPCWSTR symbol,LPCWSTR group,MTTickShort &tick);
  virtual MTAPIRES TickLastRaw(LPCWSTR symbol,MTTickShort &tick);
  virtual MTAPIRES TickAddBatch(MTTick *ticks,UINT const ticks_total);
  virtual MTAPIRES TickReserved2();
  virtual MTAPIRES BookSubscribe(LPCWSTR symbol,IMTBookSink *sink);
  virtual MTAPIRES BookUnsubscribe(LPCWSTR symbol,IMTBookSink *sink);
  virtual MTAPIRES BookGet(LPCWSTR symbol,MTBook &book);
  virtual MTAPIRES BookSubscribeBatch(LPWSTR *symbols,UINT symbols_total,IMTBookSink *sink);
  virtual MTAPIRES BookUnsubscribeBatch(LPWSTR *symbols,UINT symbols_total,IMTBookSink *sink);
  virtual MTAPIRES BookReserved3();
  virtual MTAPIRES BookReserved4();
  virtual IMTMail *MailCreate();
  virtual MTAPIRES MailSubscribe(IMTMailSink *sink);
  virtual MTAPIRES MailUnsubscribe(IMTMailSink *sink);
  virtual UINT MailTotal();
  virtual MTAPIRES MailNext(UINT const pos,IMTMail *mail);
  virtual MTAPIRES MailDelete(UINT const pos);
  virtual MTAPIRES MailDeleteId(UINT64 const id);
  virtual MTAPIRES MailSend(IMTMail *mail);
  virtual MTAPIRES MailBodyRequest(UINT64 const id,IMTMail *mail);
  virtual MTAPIRES MailReserved2();
  virtual MTAPIRES MailReserved3();
  virtual MTAPIRES MailReserved4();
  virtual IMTNews *NewsCreate();
  virtual MTAPIRES NewsSubscribe(IMTNewsSink *sink);
  virtual MTAPIRES NewsUnsubscribe(IMTNewsSink *sink);
  virtual UINT NewsTotal();
  virtual MTAPIRES NewsNext(UINT const pos,IMTNews *news);
  virtual MTAPIRES NewsBodyRequest(UINT64 const id,IMTNews *news);
  virtual MTAPIRES NewsSend(IMTNews *news);
  virtual MTAPIRES NewsReserved1();
  virtual MTAPIRES NewsReserved2();
  virtual MTAPIRES NewsReserved3();
  virtual MTAPIRES NewsReserved4();
  virtual IMTRequest *RequestCreate();
  virtual IMTRequestArray *RequestCreateArray();
  virtual MTAPIRES RequestSubscribe(IMTRequestSink *sink);
  virtual MTAPIRES RequestUnsubscribe(IMTRequestSink *sink);
  virtual UINT RequestTotal();
  virtual MTAPIRES RequestNext(UINT const pos,IMTRequest *request);
  virtual MTAPIRES RequestGet(UINT const id,IMTRequest *request);
  virtual MTAPIRES RequestGetAll(IMTRequestArray *requests);
  virtual MTAPIRES RequestReserved1();
  virtual MTAPIRES RequestReserved2();
  virtual MTAPIRES RequestReserved3();
  virtual MTAPIRES RequestReserved4();
  virtual IMTConfirm *DealerConfirmCreate();
  virtual MTAPIRES DealerUnsubscribe(IMTDealerSink *sink);
  virtual MTAPIRES DealerStart();
  virtual MTAPIRES DealerStop();
  virtual MTAPIRES DealerGet(IMTRequest *request);
  virtual MTAPIRES DealerLock(UINT const id,IMTRequest *request);
  virtual MTAPIRES DealerAnswer(IMTConfirm *confirm);
  virtual MTAPIRES DealerSend(IMTRequest *request,IMTDealerSink *sink,UINT &id);
  virtual MTAPIRES DealerBalance(UINT64 const login,double const value,UINT const type,LPCWSTR comment,UINT64 &deal_id);
  virtual MTAPIRES DealerBalanceRaw(UINT64 const login,double const value,UINT const type,LPCWSTR comment,UINT64 &deal_id);
  virtual MTAPIRES DealerReserved1();
  virtual MTAPIRES DealerReserved2();
  virtual MTAPIRES DealerReserved3();
  virtual MTAPIRES CustomCommand(LPCVOID indata,UINT const indata_len,LPVOID &outdata,UINT &outdata_len);
  virtual MTAPIRES CustomCommand(IMTByteStream *indata,IMTByteStream *outdata);
  virtual IMTByteStream *CustomCreateStream();
  virtual MTAPIRES CustomReserved3();
  virtual MTAPIRES CustomReserved4();
  virtual IMTSummary *SummaryCreate();
  virtual IMTSummaryArray *SummaryCreateArray();
  virtual MTAPIRES SummarySubscribe(IMTSummarySink *sink);
  virtual MTAPIRES SummaryUnsubscribe(IMTSummarySink *sink);
  virtual LPCWSTR SummaryCurrency();
  virtual MTAPIRES SummaryCurrency(LPCWSTR currency);
  virtual UINT SummaryTotal();
  virtual MTAPIRES SummaryNext(UINT const pos,IMTSummary *summary);
  virtual MTAPIRES SummaryGet(LPCWSTR symbol,IMTSummary *summary);
  virtual MTAPIRES SummaryGetAll(IMTSummaryArray *summary);
  virtual IMTExposure *ExposureCreate();
  virtual IMTExposureArray *ExposureCreateArray();
  virtual MTAPIRES ExposureSubscribe(IMTExposureSink *sink);
  virtual MTAPIRES ExposureUnsubscribe(IMTExposureSink *sink);
  virtual LPCWSTR ExposureCurrency();
  virtual MTAPIRES ExposureCurrency(LPCWSTR currency);
  virtual UINT ExposureTotal();
  virtual MTAPIRES ExposureNext(UINT const pos,IMTExposure *exposure);
  virtual MTAPIRES ExposureGet(LPCWSTR symbol,IMTExposure *exposure);
  virtual MTAPIRES ExposureGetAll(IMTExposureArray *exposure);
  virtual MTAPIRES UserExternalGet(UINT64 const gateway_id,LPCWSTR account,IMTUser *user);
  virtual MTAPIRES UserExternalGet(LPCWSTR account,IMTUser *user);
  virtual MTAPIRES UserExternalRequest(UINT64 const gateway_id,LPCWSTR account,IMTUser *user);
  virtual MTAPIRES UserExternalRequest(LPCWSTR account,IMTUser *user);
  virtual IMTUserArray *UserCreateArray();
  virtual IMTAccountArray *UserCreateAccountArray();
  virtual MTAPIRES UserRequestArray(LPCWSTR group,IMTUserArray *users);
  virtual MTAPIRES UserAccountRequestArray(LPCWSTR group,IMTAccountArray *accounts);
  virtual MTAPIRES PasswordChange(UINT const type,LPCWSTR password);
  virtual MTAPIRES PasswordReserved1();
  virtual MTAPIRES PasswordReserved2();
  virtual IMTDaily *DailyCreate();
  virtual IMTDailyArray *DailyCreateArray();
  virtual MTAPIRES DailyRequest(UINT64 const login,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual MTAPIRES DailyRequestLight(UINT64 const login,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual MTAPIRES DailyRequestByGroup(LPCWSTR group,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual MTAPIRES DailyRequestByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual MTAPIRES DailyRequestLightByGroup(LPCWSTR group,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual MTAPIRES DailyRequestLightByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTDailyArray *daily);
  virtual IMTConPlugin *PluginCreate();
  virtual IMTConPluginModule *PluginModuleCreate();
  virtual IMTConParam *PluginParamCreate();
  virtual MTAPIRES PluginUpdate(IMTConPlugin *plugin);
  virtual UINT PluginTotal();
  virtual MTAPIRES PluginNext(UINT const pos,IMTConPlugin *plugin);
  virtual MTAPIRES PluginGet(LPCWSTR name,IMTConPlugin *plugin);
  virtual MTAPIRES PluginReserved1();
  virtual MTAPIRES PluginReserved2();
  virtual MTAPIRES PluginReserved3();
  virtual MTAPIRES PluginReserved4();
  virtual IMTConSpread *SpreadCreate();
  virtual IMTConSpreadLeg *SpreadLegCreate();
  virtual MTAPIRES SpreadSubscribe(IMTConSpreadSink *sink);
  virtual MTAPIRES SpreadUnsubscribe(IMTConSpreadSink *sink);
  virtual UINT SpreadTotal();
  virtual MTAPIRES SpreadNext(UINT const pos,IMTConSpread *spread);
  virtual MTAPIRES SpreadReserved1();
  virtual MTAPIRES SpreadReserved2();
  virtual MTAPIRES SpreadReserved3();
  virtual MTAPIRES SpreadReserved4();
  virtual MTAPIRES TradeProfit(LPCWSTR group,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price_open,double const price_close,double &profit,double &profit_rate);
  virtual MTAPIRES TradeRateBuy(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group,LPCWSTR symbol,double const price);
  virtual MTAPIRES TradeRateBuy(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group,LPCWSTR symbol);
  virtual MTAPIRES TradeRateBuy(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group);
  virtual MTAPIRES TradeRateBuy(LPCWSTR base,LPCWSTR currency,double &rate);
  virtual MTAPIRES TradeRateSell(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group,LPCWSTR symbol,double const price);
  virtual MTAPIRES TradeRateSell(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group,LPCWSTR symbol);
  virtual MTAPIRES TradeRateSell(LPCWSTR base,LPCWSTR currency,double &rate,LPCWSTR group);
  virtual MTAPIRES TradeRateSell(LPCWSTR base,LPCWSTR currency,double &rate);
  virtual MTAPIRES TradeMarginCheck(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price,IMTAccount *account_new,IMTAccount *account_current);
  virtual MTAPIRES TradeMarginCheck(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price,IMTAccount *account_new);
  virtual MTAPIRES TradeMarginCheck(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price);
  virtual MTAPIRES TradeMarginCheck(IMTOrder const *order,IMTAccount *account_new,IMTAccount *account_current);
  virtual MTAPIRES TradeMarginCheck(IMTOrder const *order,IMTAccount *account_new);
  virtual MTAPIRES TradeMarginCheck(IMTOrder const *order);
  virtual MTAPIRES TradeProfitExt(LPCWSTR group,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price_open,double const price_close,double &profit,double &profit_rate);
  virtual MTAPIRES TradeMarginCheckExt(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price,IMTAccount *account_new,IMTAccount *account_current);
  virtual MTAPIRES TradeMarginCheckExt(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price,IMTAccount *account_new);
  virtual MTAPIRES TradeMarginCheckExt(UINT64 const login,LPCWSTR symbol,UINT const type,UINT64 const volume,double const price);
  virtual MTAPIRES TradeReserved3();
  virtual MTAPIRES TradeReserved4();
  virtual MTAPIRES NetworkRescan(UINT const flags,UINT const timeout);
  virtual UINT64 NetworkBytesSent();
  virtual UINT64 NetworkBytesRead();
  virtual MTAPIRES NetworkServer(MTAPISTR &server);
  virtual MTAPIRES NetworkAddress(MTAPISTR &address);
  virtual MTAPIRES NetworkReserved1();
  virtual MTAPIRES NetworkReserved2();
  virtual MTAPIRES NetworkReserved3();
  virtual MTAPIRES NetworkReserved4();
  virtual IMTOnline *OnlineCreate();
  virtual IMTOnlineArray *OnlineCreateArray();
  virtual UINT OnlineTotal();
  virtual MTAPIRES OnlineNext(UINT const pos,IMTOnline *online);
  virtual MTAPIRES OnlineGet(UINT64 const login,IMTOnlineArray *online);
  virtual MTAPIRES OnlineDisconnect(IMTOnline *online);
  virtual MTAPIRES OnlineDisconnectBatch(IMTOnlineArray *online,MTAPIRES *results);
  virtual MTAPIRES OnlineDisconnectBatchArray(IMTOnline **online,UINT const online_total,MTAPIRES *results);
  virtual MTAPIRES OnlineReserved4();
  virtual MTAPIRES TradeAccountSet(INT64 const request_id,IMTUser const *user,IMTAccount const *account,IMTOrderArray const *orders,IMTPositionArray const *positions);
  virtual MTAPIRES TradeAccountReserved1();
  virtual MTAPIRES TradeAccountReserved2();
  virtual MTAPIRES TradeAccountReserved3();
  virtual MTAPIRES TradeAccountReserved4();
  virtual MTAPIRES NotificationsSend(LPWSTR metaquotes_ids,LPCWSTR message);
  virtual MTAPIRES NotificationsSend(UINT64 const *logins,UINT const logins_total,LPCWSTR message);
  virtual MTAPIRES NotificationsReserved1();
  virtual MTAPIRES NotificationsReserved2();
  virtual MTAPIRES NotificationsReserved3();
  virtual MTAPIRES NotificationsReserved4();
  virtual MTAPIRES SettingGet(LPCWSTR section,LPCWSTR key,LPVOID &outdata,UINT &outdata_len);
  virtual MTAPIRES SettingSet(LPCWSTR section,LPCWSTR key,LPVOID const indata,UINT const indata_len);
  virtual MTAPIRES SettingDelete(LPCWSTR section,LPCWSTR key);
  virtual MTAPIRES SettingReserved1();
  virtual MTAPIRES SettingReserved2();
  virtual MTAPIRES SettingReserved3();
  virtual MTAPIRES SettingReserved4();
  virtual MTAPIRES ChartRequest(LPCWSTR symbol,INT64 const from,INT64 const to,MTChartBar *&bars,UINT &bars_total);
  virtual MTAPIRES ChartDelete(LPCWSTR symbol,INT64 const *bars_dates,UINT const bars_total);
  virtual MTAPIRES ChartUpdate(LPCWSTR symbol,MTChartBar const *bars,UINT const bars_total);
  virtual MTAPIRES ChartReplace(LPCWSTR symbol,INT64 const from,INT64 const to,MTChartBar const *bars,UINT const bars_total);
  virtual MTAPIRES ChartSplit(LPCWSTR symbol,UINT const new_shares,UINT const old_shares,UINT const rounding_rule,INT64 const datetime_from,INT64 const datetime_to);
  virtual MTAPIRES ChartReserved2();
  virtual MTAPIRES ChartReserved3();
  virtual MTAPIRES TickHistoryRequestRaw(LPCWSTR symbol,INT64 const from,INT64 const to,MTTickShort *&ticks,UINT &ticks_total);
  virtual MTAPIRES TickHistoryAdd(LPCWSTR symbol,MTTickShort const *ticks,UINT const ticks_total);
  virtual MTAPIRES TickHistoryReplace(LPCWSTR symbol,INT64 const from_msc,INT64 const to_msc,MTTickShort const *ticks,UINT const ticks_total);
  virtual MTAPIRES TickHistoryReserved1();
  virtual MTAPIRES TickHistoryReserved2();
  virtual MTAPIRES TickHistoryReserved3();
  virtual MTAPIRES TickHistoryReserved4();
  virtual MTAPIRES DealRequestByGroup(LPCWSTR group,INT64 const from,INT64 const to,IMTDealArray *deals);
  virtual MTAPIRES DealRequestByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTDealArray *deals);
  virtual MTAPIRES DealRequestByTickets(UINT64 const *tickets,UINT const tickets_total,IMTDealArray *deals);
  virtual MTAPIRES DealUpdateBatch(IMTDealArray *deals,MTAPIRES *results);
  virtual MTAPIRES DealUpdateBatchArray(IMTDeal **deals,UINT const deals_total,MTAPIRES *results);
  virtual MTAPIRES DealDeleteBatch(UINT64 const *tickets,UINT const tickets_total,MTAPIRES *results);
  virtual MTAPIRES DealRequestPage(UINT64 const login,INT64 const from,INT64 const to,UINT const offset,UINT const total,IMTDealArray *deals);
  virtual MTAPIRES DealAdd(IMTDeal *deal);
  virtual MTAPIRES DealAddBatch(IMTDealArray *deals,MTAPIRES *results);
  virtual MTAPIRES DealAddBatchArray(IMTDeal **deals,UINT const deals_total,MTAPIRES *results);
  virtual MTAPIRES PositionGetByLogins(UINT64 const *logins,UINT const logins_total,IMTPositionArray *positions);
  virtual MTAPIRES PositionGetByTickets(UINT64 const *tickets,UINT const tickets_total,IMTPositionArray *positions);
  virtual MTAPIRES PositionDeleteByTicket(UINT64 const ticket);
  virtual MTAPIRES PositionRequestByGroup(LPCWSTR group,IMTPositionArray *positions);
  virtual MTAPIRES PositionRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTPositionArray *positions);
  virtual MTAPIRES PositionRequestByTickets(UINT64 const *tickets,UINT const tickets_total,IMTPositionArray *positions);
  virtual MTAPIRES PositionUpdateBatch(IMTPositionArray *positions,MTAPIRES *results);
  virtual MTAPIRES PositionUpdateBatchArray(IMTPosition **positions,UINT const positions_total,MTAPIRES *results);
  virtual MTAPIRES PositionDeleteBatch(UINT64 const *tickets,UINT const tickets_total,MTAPIRES *results);
  virtual MTAPIRES PositionSplit(UINT64 const *tickets,UINT const tickets_total,double const *adjustments,UINT const new_shares,UINT const old_shares,UINT const round_rule_price,UINT const round_rule_volume,UINT const flags,MTAPIRES *results);
  virtual MTAPIRES PositionGetBySymbol(LPCWSTR groups,LPCWSTR symbol,IMTPositionArray *positions);
  virtual MTAPIRES PositionRequestByLoginsSymbol(UINT64 const *logins,UINT const logins_total,LPCWSTR symbol,IMTPositionArray *positions);
  virtual MTAPIRES PositionRequestByGroupSymbol(LPCWSTR group,LPCWSTR symbol,IMTPositionArray *positions);
  virtual MTAPIRES OrderGetByTickets(UINT64 const *tickets,UINT const tickets_total,IMTOrderArray *orders);
  virtual MTAPIRES OrderRequestByGroup(LPCWSTR group,IMTOrderArray *orders);
  virtual MTAPIRES OrderRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTOrderArray *orders);
  virtual MTAPIRES OrderRequestByTickets(UINT64 const *tickets,UINT const tickets_total,IMTOrderArray *orders);
  virtual MTAPIRES OrderUpdateBatch(IMTOrderArray *orders,MTAPIRES *results);
  virtual MTAPIRES OrderUpdateBatchArray(IMTOrder **orders,UINT const orders_total,MTAPIRES *results);
  virtual MTAPIRES OrderDeleteBatch(UINT64 const *tickets,UINT const tickets_total,MTAPIRES *results);
  virtual MTAPIRES OrderGetBySymbol(LPCWSTR groups,LPCWSTR symbol,IMTOrderArray *orders);
  virtual MTAPIRES OrderAdd(IMTOrder *order);
  virtual MTAPIRES OrderAddBatch(IMTOrderArray *orders,MTAPIRES *results);
  virtual MTAPIRES OrderAddBatchArray(IMTOrder **orders,UINT const orders_total,MTAPIRES *results);
  virtual MTAPIRES HistoryRequestByGroup(LPCWSTR group,INT64 const from,INT64 const to,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequestByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequestByTickets(UINT64 const *tickets,UINT const tickets_total,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequestPage(UINT64 const login,INT64 const from,INT64 const to,UINT const offset,UINT const total,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequestByLoginsSymbol(UINT64 const *logins,UINT const logins_total,LPCWSTR symbol,INT64 const from,INT64 const to,IMTOrderArray *orders);
  virtual MTAPIRES HistoryRequestByGroupSymbol(LPCWSTR group,LPCWSTR symbol,INT64 const from,INT64 const to,IMTOrderArray *orders);
  virtual MTAPIRES HistoryReserved4();
  virtual MTAPIRES EmailSend(LPCWSTR account,LPCWSTR to,LPCWSTR to_name,LPCWSTR subject,LPCWSTR body);
  virtual MTAPIRES EmailReserved1();
  virtual MTAPIRES EmailReserved2();
  virtual MTAPIRES EmailReserved3();
  virtual MTAPIRES EmailReserved4();
  virtual MTAPIRES MessengerSend(LPCWSTR destination,LPCWSTR group,LPCWSTR sender,LPCWSTR text);
  virtual MTAPIRES MessengerVerifyPhone(LPCWSTR phone_number);
  virtual MTAPIRES MessengerReserved2();
  virtual MTAPIRES MessengerReserved3();
  virtual MTAPIRES MessengerReserved4();
  virtual IMTECNMatching *ECNCreateMatching();
  virtual IMTECNMatchingArray *ECNCreateMatchingArray();
  virtual IMTECNFilling *ECNCreateFilling();
  virtual IMTECNFillingArray *ECNCreateFillingArray();
  virtual IMTECNProvider *ECNCreateProvider();
  virtual IMTECNProviderArray *ECNCreateProviderArray();
  virtual IMTECNHistoryMatching *ECNCreateHistoryMatching();
  virtual IMTECNHistoryMatchingArray *ECNCreateHistoryMatchingArray();
  virtual IMTECNHistoryFilling *ECNCreateHistoryFilling();
  virtual IMTECNHistoryFillingArray *ECNCreateHistoryFillingArray();
  virtual IMTECNHistoryDeal *ECNCreateHistoryDeal();
  virtual IMTECNHistoryDealArray *ECNCreateHistoryDealArray();
  virtual MTAPIRES ECNRequestByGroup(LPCWSTR mask,IMTECNMatchingArray *matching,IMTECNFillingArray *filling,IMTECNProviderArray *providers);
  virtual MTAPIRES ECNRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTECNMatchingArray *matching,IMTECNFillingArray *filling,IMTECNProviderArray *providers);
  virtual MTAPIRES ECNRequestByTickets(UINT64 const *tickets,UINT const tickets_total,IMTECNMatchingArray *matching,IMTECNFillingArray *filling,IMTECNProviderArray *providers);
  virtual MTAPIRES ECNRequestHistoryByGroup(LPCWSTR mask,INT64 const from,INT64 const to,IMTECNHistoryMatchingArray *matching,IMTECNHistoryFillingArray *filling,IMTECNHistoryDealArray *deals,IMTECNProviderArray *providers);
  virtual MTAPIRES ECNRequestHistoryByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTECNHistoryMatchingArray *matching,IMTECNHistoryFillingArray *filling,IMTECNHistoryDealArray *deals,IMTECNProviderArray *providers);
  virtual MTAPIRES ECNRequestHistoryByTickets(UINT64 const *tickets,UINT const tickets_total,INT64 const from,INT64 const to,IMTECNHistoryMatchingArray *matching,IMTECNHistoryFillingArray *filling,IMTECNHistoryDealArray *deals,IMTECNProviderArray *providers);
  virtual IMTClient *ClientCreate();
  virtual IMTClientArray *ClientCreateArray();
  virtual MTAPIRES ClientAdd(IMTClient *client);
  virtual MTAPIRES ClientAddBatch(IMTClientArray *clients,MTAPIRES *results);
  virtual MTAPIRES ClientAddBatchArray(IMTClient **clients,UINT const clients_total,MTAPIRES *results);
  virtual MTAPIRES ClientUpdate(IMTClient *client);
  virtual MTAPIRES ClientUpdateBatch(IMTClientArray *clients,MTAPIRES *results);
  virtual MTAPIRES ClientUpdateBatchArray(IMTClient **clients,UINT const clients_total,MTAPIRES *results);
  virtual MTAPIRES ClientDelete(UINT64 const client_id);
  virtual MTAPIRES ClientDeleteBatch(UINT64 const *client_ids,UINT const client_ids_total,MTAPIRES *results);
  virtual MTAPIRES ClientRequest(UINT64 const client_id,IMTClient *client);
  virtual MTAPIRES ClientRequestByGroup(LPCWSTR groups,IMTClientArray *clients);
  virtual MTAPIRES ClientRequestHistory(UINT64 const client_id,UINT64 const author,INT64 const from,INT64 const to,IMTClientArray *history);
  virtual MTAPIRES ClientUserAdd(UINT64 const client_id,UINT64 const login);
  virtual MTAPIRES ClientUserAddBatch(UINT64 const client_id,UINT64 const *logins,UINT const logins_total,MTAPIRES *results);
  virtual MTAPIRES ClientUserDelete(UINT64 const client_id,UINT64 const login);
  virtual MTAPIRES ClientUserDeleteBatch(UINT64 const client_id,UINT64 const *logins,UINT const logins_total,MTAPIRES *results);
  virtual MTAPIRES ClientUserRequest(UINT64 const client_id,UINT64 *&logins,UINT &logins_total);
  virtual MTAPIRES ClientReserved1();
  virtual MTAPIRES ClientReserved2();
  virtual MTAPIRES ClientReserved3();
  virtual MTAPIRES ClientReserved4();
  virtual IMTDocument *DocumentCreate();
  virtual IMTDocumentArray *DocumentCreateArray();
  virtual MTAPIRES DocumentAdd(IMTDocument *document);
  virtual MTAPIRES DocumentAddBatch(IMTDocumentArray *documents,MTAPIRES *results);
  virtual MTAPIRES DocumentAddBatchArray(IMTDocument **documents,UINT const documents_total,MTAPIRES *results);
  virtual MTAPIRES DocumentUpdate(IMTDocument *document);
  virtual MTAPIRES DocumentUpdateBatch(IMTDocumentArray *documents,MTAPIRES *results);
  virtual MTAPIRES DocumentUpdateBatchArray(IMTDocument **documents,UINT const documents_total,MTAPIRES *results);
  virtual MTAPIRES DocumentDelete(UINT64 const document_id);
  virtual MTAPIRES DocumentDeleteBatch(UINT64 const *document_ids,UINT const document_ids_total,MTAPIRES *results);
  virtual MTAPIRES DocumentRequest(UINT64 const document_id,IMTDocument *document);
  virtual MTAPIRES DocumentRequestByClient(UINT64 const client_id,IMTDocumentArray *documents);
  virtual MTAPIRES DocumentRequestHistory(UINT64 const document_id,UINT64 const author,INT64 const from,INT64 const to,IMTDocumentArray *history);
  virtual MTAPIRES DocumentReserved1();
  virtual MTAPIRES DocumentReserved2();
  virtual MTAPIRES DocumentReserved3();
  virtual MTAPIRES DocumentReserved4();
  virtual IMTComment *CommentCreate();
  virtual IMTCommentArray *CommentCreateArray();
  virtual MTAPIRES CommentAdd(IMTComment *comment);
  virtual MTAPIRES CommentAddBatch(IMTCommentArray *comments,MTAPIRES *results);
  virtual MTAPIRES CommentAddBatchArray(IMTComment **comments,UINT const comments_total,MTAPIRES *results);
  virtual MTAPIRES CommentUpdate(IMTComment *comment);
  virtual MTAPIRES CommentUpdateBatch(IMTCommentArray *comments,MTAPIRES *results);
  virtual MTAPIRES CommentUpdateBatchArray(IMTComment **comments,UINT const comments_total,MTAPIRES *results);
  virtual MTAPIRES CommentDelete(UINT64 const comment_id);
  virtual MTAPIRES CommentDeleteBatch(UINT64 const *comment_ids,UINT const comment_ids_total,MTAPIRES *results);
  virtual MTAPIRES CommentRequest(UINT64 const comment_id,IMTComment *comment);
  virtual MTAPIRES CommentRequestByClient(UINT64 const client_id,UINT const position,UINT const total,IMTCommentArray *comments);
  virtual MTAPIRES CommentRequestByDocument(UINT64 const document_id,UINT const position,UINT const total,IMTCommentArray *comments);
  virtual MTAPIRES CommentReserved1();
  virtual MTAPIRES CommentReserved2();
  virtual MTAPIRES CommentReserved3();
  virtual MTAPIRES CommentReserved4();
  virtual IMTAttachment *AttachmentCreate();
  virtual IMTAttachmentArray *AttachmentCreateArray();
  virtual MTAPIRES AttachmentAdd(IMTAttachment *attachment);
  virtual MTAPIRES AttachmentAddBatch(IMTAttachmentArray *attachments,MTAPIRES *results);
  virtual MTAPIRES AttachmentAddBatchArray(IMTAttachment **attachments,UINT const attachments_total,MTAPIRES *results);
  virtual MTAPIRES AttachmentRequest(UINT64 const *attachment_ids,UINT const attachment_ids_total,IMTAttachmentArray *attachments);
  virtual MTAPIRES AttachmentReserved1();
  virtual MTAPIRES AttachmentReserved2();
  virtual MTAPIRES AttachmentReserved3();
  virtual MTAPIRES AttachmentReserved4();
  virtual MTAPIRES UserAccountSubscribe(IMTAccountSink *sink);
  virtual MTAPIRES UserAccountUnsubscribe(IMTAccountSink *sink);
  virtual MTAPIRES UserRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTUserArray *users);
  virtual MTAPIRES UserGetByGroup(LPCWSTR mask,IMTUserArray *users);
  virtual MTAPIRES UserGetByLogins(UINT64 const *logins,UINT const logins_total,IMTUserArray *users);
  virtual MTAPIRES UserUpdateBatch(IMTUserArray *users,MTAPIRES *results);
  virtual MTAPIRES UserUpdateBatchArray(IMTUser **users,UINT const users_total,MTAPIRES *results);
  virtual IMTConSubscription *SubscriptionCfgCreate();
  virtual IMTConSubscriptionSymbol *SubscriptionCfgSymbolCreate();
  virtual IMTConSubscriptionNews *SubscriptionCfgNewsCreate();
  virtual MTAPIRES SubscriptionCfgSubscribe(IMTConSubscriptionSink *sink);
  virtual MTAPIRES SubscriptionCfgUnsubscribe(IMTConSubscriptionSink *sink);
  virtual UINT SubscriptionCfgTotal();
  virtual MTAPIRES SubscriptionCfgNext(UINT const pos,IMTConSubscription *config);
  virtual MTAPIRES SubscriptionCfgGet(LPCWSTR name,IMTConSubscription *config);
  virtual MTAPIRES SubscriptionCfgGetByID(UINT64 const id,IMTConSubscription *config);
  virtual MTAPIRES SubscriptionCfgRequest(LPCWSTR name,IMTConSubscription *config);
  virtual MTAPIRES SubscriptionCfgRequestByID(UINT64 const id,IMTConSubscription *config);
  virtual MTAPIRES SubscriptionCfgReserved1();
  virtual MTAPIRES SubscriptionCfgReserved2();
  virtual MTAPIRES SubscriptionCfgReserved3();
  virtual MTAPIRES SubscriptionCfgReserved4();
  virtual IMTSubscription *SubscriptionCreate();
  virtual IMTSubscriptionArray *SubscriptionCreateArray();
  virtual MTAPIRES SubscriptionJoin(UINT64 const login,UINT64 const subscription,IMTSubscription *record,IMTSubscriptionHistory *history);
  virtual MTAPIRES SubscriptionJoinBatch(UINT64 const *logins,UINT64 const *subscriptions,UINT const total,MTAPIRES *results,IMTSubscriptionArray *records,IMTSubscriptionHistoryArray *history);
  virtual MTAPIRES SubscriptionCancel(UINT64 const login,UINT64 const subscription,IMTSubscription *record,IMTSubscriptionHistory *history);
  virtual MTAPIRES SubscriptionCancelBatch(UINT64 const *logins,UINT64 const *subscriptions,UINT const total,MTAPIRES *results,IMTSubscriptionArray *records,IMTSubscriptionHistoryArray *history);
  virtual MTAPIRES SubscriptionUpdate(IMTSubscription *subscription);
  virtual MTAPIRES SubscriptionUpdateBatch(IMTSubscriptionArray *records,MTAPIRES *results);
  virtual MTAPIRES SubscriptionUpdateBatchArray(IMTSubscription **records,UINT const records_total,MTAPIRES *results);
  virtual MTAPIRES SubscriptionDelete(UINT64 const id);
  virtual MTAPIRES SubscriptionDeleteBatch(UINT64 const *ids,UINT const ids_total,MTAPIRES *results);
  virtual MTAPIRES SubscriptionRequest(UINT64 const login,IMTSubscriptionArray *records);
  virtual MTAPIRES SubscriptionRequestByID(UINT64 const id,IMTSubscription *record);
  virtual MTAPIRES SubscriptionRequestByGroup(LPCWSTR group,IMTSubscriptionArray *records);
  virtual MTAPIRES SubscriptionRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTSubscriptionArray *records);
  virtual MTAPIRES SubscriptionRequestByIDs(UINT64 const *ids,UINT const ids_total,IMTSubscriptionArray *records);
  virtual MTAPIRES SubscriptionReserved1();
  virtual MTAPIRES SubscriptionReserved2();
  virtual MTAPIRES SubscriptionReserved3();
  virtual MTAPIRES SubscriptionReserved4();
  virtual IMTSubscriptionHistory *SubscriptionHistoryCreate();
  virtual IMTSubscriptionHistoryArray *SubscriptionHistoryCreateArray();
  virtual MTAPIRES SubscriptionHistoryUpdate(IMTSubscriptionHistory *subscription);
  virtual MTAPIRES SubscriptionHistoryUpdateBatch(IMTSubscriptionHistoryArray *records,MTAPIRES *results);
  virtual MTAPIRES SubscriptionHistoryUpdateBatchArray(IMTSubscriptionHistory **records,UINT const records_total,MTAPIRES *results);
  virtual MTAPIRES SubscriptionHistoryDelete(UINT64 const id);
  virtual MTAPIRES SubscriptionHistoryDeleteBatch(UINT64 const *ids,UINT const ids_total,MTAPIRES *results);
  virtual MTAPIRES SubscriptionHistoryRequest(UINT64 const login,INT64 const from,INT64 const to,IMTSubscriptionHistoryArray *records);
  virtual MTAPIRES SubscriptionHistoryRequestByID(UINT64 const id,IMTSubscriptionHistory *record);
  virtual MTAPIRES SubscriptionHistoryRequestByGroup(LPCWSTR group,INT64 const from,INT64 const to,IMTSubscriptionHistoryArray *records);
  virtual MTAPIRES SubscriptionHistoryRequestByLogins(UINT64 const *logins,UINT const logins_total,INT64 const from,INT64 const to,IMTSubscriptionHistoryArray *records);
  virtual MTAPIRES SubscriptionHistoryRequestByIDs(UINT64 const *ids,UINT const ids_total,IMTSubscriptionHistoryArray *records);
  virtual MTAPIRES SubscriptionHistoryReserved1();
  virtual MTAPIRES SubscriptionHistoryReserved2();
  virtual MTAPIRES SubscriptionHistoryReserved3();
  virtual MTAPIRES SubscriptionHistoryReserved4();
  virtual MTAPIRES DealPerform(IMTDeal *deal);
  virtual MTAPIRES DealPerformBatch(IMTDealArray *deals,MTAPIRES *results);
  virtual MTAPIRES DealPerformBatchArray(IMTDeal **deals,UINT const deals_total,MTAPIRES *results);
  virtual MTAPIRES DealRequestByLoginsSymbol(UINT64 const *logins,UINT const logins_total,LPCWSTR symbol,INT64 const from,INT64 const to,IMTDealArray *deals);
  virtual MTAPIRES DealRequestByGroupSymbol(LPCWSTR group,LPCWSTR symbol,INT64 const from,INT64 const to,IMTDealArray *deals);
  virtual MTAPIRES DealReserved3();
  virtual MTAPIRES DealReserved4();
  virtual MTAPIRES UserDeleteBatch(UINT64 const *logins,UINT const logins_total,MTAPIRES *results);
  virtual MTAPIRES UserAccountRequestByLogins(UINT64 const *logins,UINT const logins_total,IMTAccountArray *accounts);
  virtual MTAPIRES UserBalanceCheckBatch(UINT64 const *logins,UINT const logins_total,UINT const fixflag,MTAPIRES *results,double *balance_user,double *balance_history,double *credit_user,double *credit_history);
  virtual MTAPIRES UserAccountGetByGroup(LPCWSTR mask,IMTAccountArray *accounts);
  virtual MTAPIRES UserAccountGetByLogins(UINT64 const *logins,UINT const logins_total,IMTAccountArray *accounts);
  virtual MTAPIRES UserReserved5();
  virtual MTAPIRES UserReserved6();
  virtual MTAPIRES UserReserved7();
  virtual MTAPIRES OrderRequestByLoginsSymbol(UINT64 const *logins,UINT const logins_total,LPCWSTR symbol,IMTOrderArray *orders);
  virtual MTAPIRES OrderRequestByGroupSymbol(LPCWSTR group,LPCWSTR symbol,IMTOrderArray *orders);
  virtual MTAPIRES OrderCancel(UINT64 const ticket);
  virtual MTAPIRES OrderCancelBatch(UINT64 const *tickets,UINT const tickets_total,MTAPIRES *results);
  virtual MTAPIRES OrderReserved3();
  virtual MTAPIRES OrderReserved4();
  virtual IMTConLeverage *LeverageCreate();
  virtual IMTConLeverageArray *LeverageCreateArray();
  virtual IMTConLeverageRule *LeverageRuleCreate();
  virtual IMTConLeverageTier *LeverageTierCreate();
  virtual MTAPIRES LeverageSubscribe(IMTConLeverageSink *sink);
  virtual MTAPIRES LeverageUnsubscribe(IMTConLeverageSink *sink);
  virtual UINT LeverageTotal();
  virtual MTAPIRES LeverageNext(UINT const pos,IMTConLeverage *cfg);
  virtual MTAPIRES LeverageGet(LPCWSTR name,IMTConLeverage *cfg);
  virtual MTAPIRES LeverageRequest(LPCWSTR name,IMTConLeverage *cfg);
  virtual MTAPIRES LeverageRequestArray(LPCWSTR groups_mask,IMTConLeverageArray *leverages);
  virtual MTAPIRES LeverageReserved1();
  virtual MTAPIRES LeverageReserved2();
  virtual MTAPIRES LeverageReserved3();
  virtual MTAPIRES LeverageReserved4();
  virtual IMTGeo *GeoCreate();
  virtual MTAPIRES GeoResolve(LPCWSTR address,UINT const flags,IMTGeo *record);
  virtual MTAPIRES GeoResolveBatch(LPCWSTR *addresses,UINT addresses_total,UINT const flags,IMTGeo **records,MTAPIRES *results);
  virtual MTAPIRES GeoResolveReserved1();
  virtual MTAPIRES GeoResolveReserved2();
  virtual MTAPIRES GeoResolveReserved3();
  virtual MTAPIRES GeoResolveReserved4();
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
